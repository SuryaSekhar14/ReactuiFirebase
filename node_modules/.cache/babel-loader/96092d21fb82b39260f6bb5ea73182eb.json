{"ast":null,"code":"var _jsxFileName = \"/home/arnab/react-firebase-auth/src/pages/Loginpage.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, chakra, FormControl, FormLabel, Heading, HStack, Input, Stack, useToast, Text, Box, Flex } from \"@chakra-ui/react\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { FaGoogle } from \"react-icons/fa\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Card } from \"../components/Card\";\nimport DividerWithText from \"../components/DividerWithText\";\nimport { Layout } from \"../components/Layout\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Loginpage() {\n  _s();\n\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isSubmiting, setisSubmiting] = useState(false);\n  const toast = useToast();\n  const {\n    login,\n    signInwithGoogle\n  } = useAuth();\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      textAlign: \"center\",\n      my: 12,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      maxW: \"md\",\n      mx: \"auto\",\n      mt: 4,\n      children: [/*#__PURE__*/_jsxDEV(chakra.form, {\n        onSubmit: async e => {\n          e.preventDefault(); // your login logic here\n\n          if (!email || !password) {\n            toast({\n              description: \"credentials not valid\",\n              status: \"error\",\n              duration: 5000,\n              isClosable: true\n            });\n          }\n\n          setisSubmiting(true);\n          login(email, password).then(response => {\n            history.push('/profile');\n            console.log(response);\n          }).catch(error => {\n            console.log(error.message);\n            toast({\n              description: error.message,\n              status: \"error\",\n              duration: 5000,\n              isClosable: true\n            });\n          }).finally(() => setisSubmiting(false));\n        },\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              name: \"email\",\n              type: \"email\",\n              autoComplete: \"email\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              name: \"password\",\n              type: \"password\",\n              autoComplete: \"password\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            isLoading: isSubmiting,\n            type: \"submit\",\n            colorScheme: \"primary\",\n            size: \"lg\",\n            fontSize: \"md\",\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        justifyContent: \"space-between\",\n        my: 4,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"link\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/forgot-password\",\n            children: \"Forgot password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"link\",\n          onClick: () => history.push(\"/register\"),\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DividerWithText, {\n        my: 6,\n        children: \"OR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline\",\n        isFullWidth: true,\n        colorScheme: \"red\",\n        leftIcon: /*#__PURE__*/_jsxDEV(FaGoogle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this),\n        onClick: () => signInwithGoogle(),\n        children: \"Sign in with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Loginpage, \"CZcyAiWN44FK4huqbV4gvdCyE7s=\", false, function () {\n  return [useHistory, useToast, useAuth];\n});\n\n_c = Loginpage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Loginpage\");","map":{"version":3,"sources":["/home/arnab/react-firebase-auth/src/pages/Loginpage.jsx"],"names":["Button","chakra","FormControl","FormLabel","Heading","HStack","Input","Stack","useToast","Text","Box","Flex","React","useEffect","useRef","useState","FaGoogle","Link","useHistory","Card","DividerWithText","Layout","useAuth","Loginpage","history","email","setEmail","password","setPassword","isSubmiting","setisSubmiting","toast","login","signInwithGoogle","e","preventDefault","description","status","duration","isClosable","then","response","push","console","log","catch","error","message","finally","target","value"],"mappings":"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","sourcesContent":["import {\n  Button,\n  chakra,\n  FormControl,\n  FormLabel,\n  Heading,\n  HStack,\n  Input,\n  Stack,\n  useToast,\n  Text,\n  Box,\n  Flex,\n} from \"@chakra-ui/react\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { FaGoogle } from \"react-icons/fa\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Card } from \"../components/Card\";\nimport DividerWithText from \"../components/DividerWithText\";\nimport { Layout } from \"../components/Layout\";\nimport { useAuth } from \"../contexts/AuthContext\";\n\nexport default function Loginpage() {\n  const history = useHistory();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isSubmiting, setisSubmiting] = useState(false);\n  const toast = useToast();\n\n  const { login, signInwithGoogle } = useAuth();\n\n  return (\n    <Layout>\n      <Heading textAlign=\"center\" my={12}>\n        Login\n      </Heading>\n      <Card maxW=\"md\" mx=\"auto\" mt={4}>\n        <chakra.form\n          onSubmit={async (e) => {\n            e.preventDefault();\n            // your login logic here\n            if (!email || !password) {\n              toast({\n                description: \"credentials not valid\",\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n              });\n            }\n            setisSubmiting(true);\n            login(email, password)\n              .then((response) => {\n                history.push('/profile')\n                console.log(response)})\n              .catch((error) => {\n                console.log(error.message);\n\n                toast({\n                  description: error.message,\n                  status: \"error\",\n                  duration: 5000,\n                  isClosable: true,\n                });\n              })\n              .finally(() => setisSubmiting(false));\n          }}\n        >\n          <Stack spacing=\"6\">\n            <FormControl id=\"email\">\n              <FormLabel>Email address</FormLabel>\n              <Input\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                required\n              />\n            </FormControl>\n            <FormControl id=\"password\">\n              <FormLabel>Password</FormLabel>\n              <Input\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"password\"\n                required\n              />\n            </FormControl>\n            {/* <PasswordField /> */}\n            <Button isLoading={isSubmiting} type=\"submit\" colorScheme=\"primary\" size=\"lg\" fontSize=\"md\">\n              Sign in\n            </Button>\n          </Stack>\n        </chakra.form>\n        <HStack justifyContent=\"space-between\" my={4}>\n          <Button variant=\"link\">\n            <Link to=\"/forgot-password\">Forgot password?</Link>\n          </Button>\n          <Button variant=\"link\" onClick={() => history.push(\"/register\")}>\n            Register\n          </Button>\n        </HStack>\n        <DividerWithText my={6}>OR</DividerWithText>\n        <Button\n          variant=\"outline\"\n          isFullWidth\n          colorScheme=\"red\"\n          leftIcon={<FaGoogle />}\n          onClick={() => signInwithGoogle()}\n        >\n          Sign in with Google\n        </Button>\n      </Card>\n    </Layout>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}