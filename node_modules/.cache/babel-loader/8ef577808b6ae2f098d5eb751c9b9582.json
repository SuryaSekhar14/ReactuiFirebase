{"ast":null,"code":"var _jsxFileName = \"/home/arnab/react-firebase-auth/src/pages/Registerpage.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Center, chakra, FormControl, FormLabel, Heading, Input, Stack, useToast } from \"@chakra-ui/react\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { FaGoogle } from \"react-icons/fa\";\nimport { useHistory } from \"react-router-dom\";\nimport { Card } from \"../components/Card\";\nimport DividerWithText from \"../components/DividerWithText\";\nimport { Layout } from \"../components/Layout\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Registerpage() {\n  _s();\n\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isSubmiting, setisSubmiting] = useState(false);\n  const toast = useToast();\n  const {\n    register,\n    signInwithGoogle\n  } = useAuth();\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      textAlign: \"center\",\n      my: 12,\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      maxW: \"md\",\n      mx: \"auto\",\n      mt: 4,\n      children: [/*#__PURE__*/_jsxDEV(chakra.form, {\n        onSubmit: async e => {\n          e.preventDefault(); // your register logic here\n          // console.log(email, password)\n\n          if (!email || !password) {\n            toast({\n              description: \"credentials not valid\",\n              status: \"error\",\n              duration: 5000,\n              isClosable: true\n            });\n          }\n\n          setisSubmiting(true);\n          register(email, password).then(response => console.log(response)).catch(error => {\n            console.log(error.message);\n            toast({\n              description: error.message,\n              status: \"error\",\n              duration: 5000,\n              isClosable: true\n            });\n          }).finally(() => setisSubmiting(false));\n        },\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              name: \"email\",\n              type: \"email\",\n              autoComplete: \"email\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              name: \"password\",\n              type: \"password\",\n              autoComplete: \"password\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            isLoading: isSubmiting,\n            type: \"submit\",\n            colorScheme: \"primary\",\n            size: \"lg\",\n            fontSize: \"md\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Center, {\n        my: 4,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"link\",\n          onClick: () => history.push(\"/login\"),\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DividerWithText, {\n        my: 6,\n        children: \"OR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline\",\n        isFullWidth: true,\n        colorScheme: \"red\",\n        leftIcon: /*#__PURE__*/_jsxDEV(FaGoogle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this),\n        onClick: () => signInwithGoogle().then(user => console.log(user)).catch(error => console.log(error)),\n        children: \"Sign in with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Registerpage, \"9ry6kLzudxHj+2cH6XaVA2mrfn4=\", false, function () {\n  return [useHistory, useToast, useAuth];\n});\n\n_c = Registerpage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registerpage\");","map":{"version":3,"sources":["/home/arnab/react-firebase-auth/src/pages/Registerpage.jsx"],"names":["Button","Center","chakra","FormControl","FormLabel","Heading","Input","Stack","useToast","React","useEffect","useRef","useState","FaGoogle","useHistory","Card","DividerWithText","Layout","useAuth","Registerpage","history","email","setEmail","password","setPassword","isSubmiting","setisSubmiting","toast","register","signInwithGoogle","e","preventDefault","description","status","duration","isClosable","then","response","console","log","catch","error","message","finally","target","value","push","user"],"mappings":";;;AAAA,SACEA,MADF,EAEEC,MAFF,EAGEC,MAHF,EAIEC,WAJF,EAKEC,SALF,EAMEC,OANF,EAOEC,KAPF,EAQEC,KARF,EASEC,QATF,QAUO,kBAVP;AAWA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,OAAT,QAAwB,yBAAxB;;AAEA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AACrC,QAAMC,OAAO,GAAGN,UAAU,EAA1B;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAMe,KAAK,GAAGnB,QAAQ,EAAtB;AAEA,QAAM;AAAEoB,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAiCX,OAAO,EAA9C;AAEA,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,SAAS,EAAC,QAAnB;AAA4B,MAAA,EAAE,EAAE,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,IAAX;AAAgB,MAAA,EAAE,EAAC,MAAnB;AAA0B,MAAA,EAAE,EAAE,CAA9B;AAAA,8BACE,QAAC,MAAD,CAAQ,IAAR;AACE,QAAA,QAAQ,EAAE,MAAOY,CAAP,IAAa;AACrBA,UAAAA,CAAC,CAACC,cAAF,GADqB,CAErB;AACA;;AACA,cAAI,CAACV,KAAD,IAAU,CAACE,QAAf,EAAyB;AACvBI,YAAAA,KAAK,CAAC;AACJK,cAAAA,WAAW,EAAE,uBADT;AAEJC,cAAAA,MAAM,EAAE,OAFJ;AAGJC,cAAAA,QAAQ,EAAE,IAHN;AAIJC,cAAAA,UAAU,EAAE;AAJR,aAAD,CAAL;AAMD;;AACDT,UAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,UAAAA,QAAQ,CAACP,KAAD,EAAQE,QAAR,CAAR,CACGa,IADH,CACSC,QAAD,IAAcC,OAAO,CAACC,GAAR,CAAYF,QAAZ,CADtB,EAEGG,KAFH,CAEUC,KAAD,IAAW;AAChBH,YAAAA,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACC,OAAlB;AAEAf,YAAAA,KAAK,CAAC;AACJK,cAAAA,WAAW,EAAES,KAAK,CAACC,OADf;AAEJT,cAAAA,MAAM,EAAE,OAFJ;AAGJC,cAAAA,QAAQ,EAAE,IAHN;AAIJC,cAAAA,UAAU,EAAE;AAJR,aAAD,CAAL;AAMD,WAXH,EAYGQ,OAZH,CAYW,MAAMjB,cAAc,CAAC,KAAD,CAZ/B;AAaD,SA3BH;AAAA,+BA6BE,QAAC,KAAD;AAAO,UAAA,OAAO,EAAC,GAAf;AAAA,kCACE,QAAC,WAAD;AAAa,YAAA,EAAE,EAAC,OAAhB;AAAA,oCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,KAAD;AACE,cAAA,KAAK,EAAEL,KADT;AAEE,cAAA,QAAQ,EAAGS,CAAD,IAAOR,QAAQ,CAACQ,CAAC,CAACc,MAAF,CAASC,KAAV,CAF3B;AAGE,cAAA,IAAI,EAAC,OAHP;AAIE,cAAA,IAAI,EAAC,OAJP;AAKE,cAAA,YAAY,EAAC,OALf;AAME,cAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAYE,QAAC,WAAD;AAAa,YAAA,EAAE,EAAC,UAAhB;AAAA,oCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,KAAD;AACE,cAAA,KAAK,EAAEtB,QADT;AAEE,cAAA,QAAQ,EAAGO,CAAD,IAAON,WAAW,CAACM,CAAC,CAACc,MAAF,CAASC,KAAV,CAF9B;AAGE,cAAA,IAAI,EAAC,UAHP;AAIE,cAAA,IAAI,EAAC,UAJP;AAKE,cAAA,YAAY,EAAC,UALf;AAME,cAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZF,eAuBE,QAAC,MAAD;AACE,YAAA,SAAS,EAAEpB,WADb;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,WAAW,EAAC,SAHd;AAIE,YAAA,IAAI,EAAC,IAJP;AAKE,YAAA,QAAQ,EAAC,IALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA;AA7BF;AAAA;AAAA;AAAA;AAAA,cADF,eAgEE,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAE,CAAZ;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,MAAhB;AAAuB,UAAA,OAAO,EAAE,MAAML,OAAO,CAAC0B,IAAR,CAAa,QAAb,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAhEF,eAqEE,QAAC,eAAD;AAAiB,QAAA,EAAE,EAAE,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArEF,eAsEE,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,SADV;AAEE,QAAA,WAAW,MAFb;AAGE,QAAA,WAAW,EAAC,KAHd;AAIE,QAAA,QAAQ,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,gBAJZ;AAKE,QAAA,OAAO,EAAE,MACPjB,gBAAgB,GACbO,IADH,CACSW,IAAD,IAAUT,OAAO,CAACC,GAAR,CAAYQ,IAAZ,CADlB,EAEGP,KAFH,CAEUC,KAAD,IAAWH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CAFpB,CANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtEF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2FD;;GApGuBtB,Y;UACNL,U,EAIFN,Q,EAEyBU,O;;;KAPjBC,Y","sourcesContent":["import {\n  Button,\n  Center,\n  chakra,\n  FormControl,\n  FormLabel,\n  Heading,\n  Input,\n  Stack,\n  useToast,\n} from \"@chakra-ui/react\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { FaGoogle } from \"react-icons/fa\";\nimport { useHistory } from \"react-router-dom\";\nimport { Card } from \"../components/Card\";\nimport DividerWithText from \"../components/DividerWithText\";\nimport { Layout } from \"../components/Layout\";\nimport { useAuth } from \"../contexts/AuthContext\";\n\nexport default function Registerpage() {\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isSubmiting, setisSubmiting] = useState(false);\n  const toast = useToast();\n\n  const { register, signInwithGoogle } = useAuth();\n\n  return (\n    <Layout>\n      <Heading textAlign=\"center\" my={12}>\n        Register\n      </Heading>\n      <Card maxW=\"md\" mx=\"auto\" mt={4}>\n        <chakra.form\n          onSubmit={async (e) => {\n            e.preventDefault();\n            // your register logic here\n            // console.log(email, password)\n            if (!email || !password) {\n              toast({\n                description: \"credentials not valid\",\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n              });\n            }\n            setisSubmiting(true);\n            register(email, password)\n              .then((response) => console.log(response))\n              .catch((error) => {\n                console.log(error.message);\n\n                toast({\n                  description: error.message,\n                  status: \"error\",\n                  duration: 5000,\n                  isClosable: true,\n                });\n              })\n              .finally(() => setisSubmiting(false));\n          }}\n        >\n          <Stack spacing=\"6\">\n            <FormControl id=\"email\">\n              <FormLabel>Email address</FormLabel>\n              <Input\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                required\n              />\n            </FormControl>\n            <FormControl id=\"password\">\n              <FormLabel>Password</FormLabel>\n              <Input\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"password\"\n                required\n              />\n            </FormControl>\n            <Button\n              isLoading={isSubmiting}\n              type=\"submit\"\n              colorScheme=\"primary\"\n              size=\"lg\"\n              fontSize=\"md\"\n            >\n              Sign up\n            </Button>\n          </Stack>\n        </chakra.form>\n        <Center my={4}>\n          <Button variant=\"link\" onClick={() => history.push(\"/login\")}>\n            Login\n          </Button>\n        </Center>\n        <DividerWithText my={6}>OR</DividerWithText>\n        <Button\n          variant=\"outline\"\n          isFullWidth\n          colorScheme=\"red\"\n          leftIcon={<FaGoogle />}\n          onClick={() =>\n            signInwithGoogle()\n              .then((user) => console.log(user))\n              .catch((error) => console.log(error))\n          }\n        >\n          Sign in with Google\n        </Button>\n      </Card>\n    </Layout>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}