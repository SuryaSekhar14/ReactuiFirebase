[{"/home/arnab/ReactuiFirebase/src/index.js":"1","/home/arnab/ReactuiFirebase/src/App.js":"2","/home/arnab/ReactuiFirebase/src/contexts/AuthContext.js":"3","/home/arnab/ReactuiFirebase/src/components/AppRouter.jsx":"4","/home/arnab/ReactuiFirebase/src/utils/init-firebase.js":"5","/home/arnab/ReactuiFirebase/src/pages/NotfoundPage.jsx":"6","/home/arnab/ReactuiFirebase/src/pages/ForgotPasswordPage.jsx":"7","/home/arnab/ReactuiFirebase/src/pages/Profilepage.jsx":"8","/home/arnab/ReactuiFirebase/src/pages/Homepage.jsx":"9","/home/arnab/ReactuiFirebase/src/pages/ProtectedPage.jsx":"10","/home/arnab/ReactuiFirebase/src/pages/Loginpage.jsx":"11","/home/arnab/ReactuiFirebase/src/pages/ResetPasswordPage.jsx":"12","/home/arnab/ReactuiFirebase/src/pages/Registerpage.jsx":"13","/home/arnab/ReactuiFirebase/src/hooks/useMounted.js":"14","/home/arnab/ReactuiFirebase/src/components/Layout.jsx":"15","/home/arnab/ReactuiFirebase/src/components/DividerWithText.jsx":"16","/home/arnab/ReactuiFirebase/src/components/Card.jsx":"17","/home/arnab/ReactuiFirebase/src/components/Navbar.jsx":"18","/home/arnab/ReactuiFirebase/src/components/Navlink.jsx":"19","/home/arnab/ReactuiFirebase/src/CustomTheme.js":"20","/home/arnab/ReactuiFirebase/src/Particles/Particle.jsx":"21"},{"size":643,"mtime":1640170520657,"results":"22","hashOfConfig":"23"},{"size":258,"mtime":1640066836658,"results":"24","hashOfConfig":"23"},{"size":1953,"mtime":1640112862510,"results":"25","hashOfConfig":"23"},{"size":1789,"mtime":1640170424552,"results":"26","hashOfConfig":"23"},{"size":606,"mtime":1640066369779,"results":"27","hashOfConfig":"23"},{"size":241,"mtime":1640008681939,"results":"28","hashOfConfig":"23"},{"size":2328,"mtime":1640100315310,"results":"29","hashOfConfig":"23"},{"size":2912,"mtime":1640181197170,"results":"30","hashOfConfig":"23"},{"size":1465,"mtime":1640181676315,"results":"31","hashOfConfig":"23"},{"size":449,"mtime":1640008747087,"results":"32","hashOfConfig":"23"},{"size":3890,"mtime":1640091220624,"results":"33","hashOfConfig":"23"},{"size":2412,"mtime":1640108951770,"results":"34","hashOfConfig":"23"},{"size":3658,"mtime":1640087793604,"results":"35","hashOfConfig":"23"},{"size":280,"mtime":1640087650107,"results":"36","hashOfConfig":"23"},{"size":753,"mtime":1640181695083,"results":"37","hashOfConfig":"23"},{"size":619,"mtime":1640008681939,"results":"38","hashOfConfig":"23"},{"size":287,"mtime":1640008681939,"results":"39","hashOfConfig":"23"},{"size":1435,"mtime":1640195643607,"results":"40","hashOfConfig":"23"},{"size":504,"mtime":1640008747087,"results":"41","hashOfConfig":"23"},{"size":585,"mtime":1640155481469,"results":"42","hashOfConfig":"23"},{"size":729,"mtime":1640182124160,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1mvcev4",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/home/arnab/ReactuiFirebase/src/index.js",[],["93","94"],"/home/arnab/ReactuiFirebase/src/App.js",[],"/home/arnab/ReactuiFirebase/src/contexts/AuthContext.js",[],"/home/arnab/ReactuiFirebase/src/components/AppRouter.jsx",[],"/home/arnab/ReactuiFirebase/src/utils/init-firebase.js",[],"/home/arnab/ReactuiFirebase/src/pages/NotfoundPage.jsx",[],"/home/arnab/ReactuiFirebase/src/pages/ForgotPasswordPage.jsx",[],"/home/arnab/ReactuiFirebase/src/pages/Profilepage.jsx",["95","96","97","98","99","100"],"import React from \"react\";\nimport { Layout } from \"../components/Layout\";\nimport {\n  Badge,\n  chakra,\n  Code,\n  Container,\n  Heading,\n  Stack,\n  Circle,\n  Flex,\n  Box,\n  Text,\n  Button,\n} from \"@chakra-ui/react\";\nimport { Image } from \"@chakra-ui/image\";\nimport { useMediaQuery } from \"@chakra-ui/media-query\";\nimport { Card } from \"../components/Card\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { useColorMode } from \"@chakra-ui/color-mode\";\n\n\nexport default function Profilepage() {\n  const { colorMode } = useColorMode();\n  const isDark = colorMode === \"dark\";\n  const { currentUser } = useAuth();\n  const [isNotSmallerScreen] = useMediaQuery(\"(min-width:600px)\");\n  \n  return (\n    <Layout>\n      {/* <Heading>\n        Profile page\n        <Badge colorScheme='green' fontSize='lg' mx={4}>\n          Protected Page\n        </Badge>\n      </Heading>\n      \n      <Container maxW='container.lg' overflowX='auto' py={4}>\n        <chakra.pre>\n          {JSON.stringify(currentUser, null, 2)}\n        </chakra.pre>\n      </Container> */}\n      <Stack>\n        <Circle\n          position=\"absolute\"\n          bg=\"blue.100\"\n          opacity=\"0.1\"\n          w=\"300px\"\n          h=\"300px\"\n          alignSelf=\"flex-end\"\n        />\n        <Flex\n          direction={isNotSmallerScreen ? \"row\" : \"column\"}\n          spacing=\"200px\"\n          p={isNotSmallerScreen ? \"32\" : \"0\"}\n          alignSelf=\"flex-start\"\n        >\n          <Box mt={isNotSmallerScreen ? \"0\" : 16} align=\"flex-start\">\n            <Text fontSize=\"5xl\" fontWeight=\"semibold\">\n              Hi There!\n            </Text>\n            <Text\n              fontSize=\"7xl\"\n              fontWeight=\"bold\"\n              bgGradient=\"linear(to-r, cyan.400, blue.500, purple.600)\"\n              bgClip=\"text\"\n            >\n              {currentUser.displayName}\n            </Text>\n            <Text color={isDark ? \"gray.200\" : \"gray.500\"}>\n              Welcome OnBoard with AI Writer\n            </Text>\n          </Box>\n          <Image\n            alignSelf=\"center\"\n            mt={isNotSmallerScreen ? \"0\" : \"12\"}\n            mb={isNotSmallerScreen ? \"0\" : \"12\"}\n            borderRadius=\"full\"\n            backgroundColor=\"transparent\"\n            boxShadow=\"lg\"\n            boxSize=\"300px\"\n            src={currentUser.photoURL}\n          />\n        </Flex>\n        <Flex\n          direction={isNotSmallerScreen ? \"row\" : \"column\"}\n          spacing=\"100px\"\n          p={isNotSmallerScreen ? \"32\" : \"0\"}\n          alignSelf=\"flex-start\"\n        >\n          <Button\n            colorScheme=\"teal\"\n            size=\"lg\"\n            variant=\"outline\"\n           \n          >\n            Button\n          </Button>\n        </Flex>\n      </Stack>\n      {/* \n      <Container maxW=\"container.lg\" overflowX=\"auto\" py={4}>\n        <chakra.pre>{JSON.stringify(currentUser, null, 2)}</chakra.pre>\n      </Container> */}\n    </Layout>\n  );\n}\n","/home/arnab/ReactuiFirebase/src/pages/Homepage.jsx",["101","102","103","104","105","106","107","108","109","110"],"import {\n  Badge,\n  chakra,\n  Code,\n  Heading,\n  List,\n  ListItem,\n  OrderedList,\n  Tag,\n  Text,\n  Image\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { Layout } from \"../components/Layout\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\n// import Particles from \"react-particles-js\";\nimport Particles from \"../Particles/Particle\"\n\nexport default function Homepage() {\n  const { currentUser } = useAuth();\n  return (\n   \n      <Layout>\n       \n        {/* <Particles\n        params={{\n          particles: {\n            number: {\n              value: 200,\n              density: {\n                enable: true,\n                value_area: 1000,\n              },\n            },\n          },\n        }}\n        />\n          <div\n          style={{\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            width: \"100%\",\n            height: \"100%\"\n          }}\n        > */}\n       \n           <Heading>Home page</Heading>\n          <Text my={6}>{`The current user is ${currentUser}`}</Text>\n          {/* <Image\n            alignSelf=\"center\"\n            // mt={isNotSmallerScreen ? \"0\" : \"12\"}\n            // mb={isNotSmallerScreen ? \"0\" : \"12\"}\n            borderRadius=\"full\"\n            backgroundColor=\"transparent\"\n            boxShadow=\"lg\"\n            boxSize=\"1000px\"\n            src={currentUser.photoURL}\n          /> */}\n       \n        \n      </Layout>\n   \n  );\n}\n","/home/arnab/ReactuiFirebase/src/pages/ProtectedPage.jsx",[],"/home/arnab/ReactuiFirebase/src/pages/Loginpage.jsx",["111","112","113","114","115"],"import {\n  Button,\n  chakra,\n  FormControl,\n  FormLabel,\n  Heading,\n  HStack,\n  Input,\n  Stack,\n  useToast,\n  Text,\n  Box,\n  Flex,\n} from \"@chakra-ui/react\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { FaGoogle } from \"react-icons/fa\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { Card } from \"../components/Card\";\nimport DividerWithText from \"../components/DividerWithText\";\nimport { Layout } from \"../components/Layout\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport useMounted from \"../hooks/useMounted\";\n\nexport default function Loginpage() {\n  const history = useHistory();\n  const location = useLocation();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isSubmiting, setisSubmiting] = useState(false);\n  const toast = useToast();\n\n  const { login, signInwithGoogle } = useAuth();\n  const mounted = useMounted();\n\n  return (\n    <Layout>\n      <Heading textAlign=\"center\" my={12}>\n        Login\n      </Heading>\n      <Card maxW=\"md\" mx=\"auto\" mt={4}>\n        <chakra.form\n          onSubmit={async (e) => {\n            e.preventDefault();\n            // your login logic here\n            if (!email || !password) {\n              toast({\n                description: \"credentials not valid\",\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n              });\n            }\n            setisSubmiting(true);\n            login(email, password)\n              .then((response) => {\n                history.push(location.state?.from ?? \"/profile\");\n                console.log(response);\n              })\n              .catch((error) => {\n                console.log(error.message);\n\n                toast({\n                  description: error.message,\n                  status: \"error\",\n                  duration: 5000,\n                  isClosable: true,\n                });\n              })\n              .finally(() => mounted.current && setisSubmiting(false));\n          }}\n        >\n          <Stack spacing=\"6\">\n            <FormControl id=\"email\">\n              <FormLabel>Email address</FormLabel>\n              <Input\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                required\n              />\n            </FormControl>\n            <FormControl id=\"password\">\n              <FormLabel>Password</FormLabel>\n              <Input\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"password\"\n                required\n              />\n            </FormControl>\n            {/* <PasswordField /> */}\n            <Button\n              isLoading={isSubmiting}\n              type=\"submit\"\n              colorScheme=\"primary\"\n              size=\"lg\"\n              fontSize=\"md\"\n            >\n              Sign in\n            </Button>\n          </Stack>\n        </chakra.form>\n        <HStack justifyContent=\"space-between\" my={4}>\n          <Button variant=\"link\">\n            <Link to=\"/forgot-password\">Forgot password?</Link>\n          </Button>\n          <Button variant=\"link\" onClick={() => history.push(\"/register\")}>\n            Register\n          </Button>\n        </HStack>\n        <DividerWithText my={6}>OR</DividerWithText>\n        <Button\n          variant=\"outline\"\n          isFullWidth\n          colorScheme=\"red\"\n          leftIcon={<FaGoogle />}\n          onClick={() =>\n            signInwithGoogle()\n              .then((user) => console.log(user))\n              .catch((error) => console.log(error))\n          }\n        >\n          Sign in with Google\n        </Button>\n      </Card>\n    </Layout>\n  );\n}\n","/home/arnab/ReactuiFirebase/src/pages/ResetPasswordPage.jsx",[],"/home/arnab/ReactuiFirebase/src/pages/Registerpage.jsx",["116","117"],"import {\n  Button,\n  Center,\n  chakra,\n  FormControl,\n  FormLabel,\n  Heading,\n  Input,\n  Stack,\n  useToast,\n} from \"@chakra-ui/react\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { FaGoogle } from \"react-icons/fa\";\nimport { useHistory } from \"react-router-dom\";\nimport { Card } from \"../components/Card\";\nimport DividerWithText from \"../components/DividerWithText\";\nimport { Layout } from \"../components/Layout\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport useMounted from \"../hooks/useMounted\";\n\nexport default function Registerpage() {\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isSubmiting, setisSubmiting] = useState(false);\n  const toast = useToast();\n\n  const { register, signInwithGoogle } = useAuth();\n\n  const mounted = useMounted();\n\n  return (\n    <Layout>\n      <Heading textAlign=\"center\" my={12}>\n        Register\n      </Heading>\n      <Card maxW=\"md\" mx=\"auto\" mt={4}>\n        <chakra.form\n          onSubmit={async (e) => {\n            e.preventDefault();\n            // your register logic here\n            // console.log(email, password)\n            if (!email || !password) {\n              toast({\n                description: \"credentials not valid\",\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n              });\n            }\n            setisSubmiting(true);\n            register(email, password)\n              .then((response) => {\n                history.push(\"/profile\");\n                console.log(response);\n              })\n              .catch((error) => {\n                console.log(error.message);\n\n                toast({\n                  description: error.message,\n                  status: \"error\",\n                  duration: 5000,\n                  isClosable: true,\n                });\n              })\n              .finally(() =>  mounted.current && setisSubmiting(false));\n          }}\n        >\n          <Stack spacing=\"6\">\n            <FormControl id=\"email\">\n              <FormLabel>Email address</FormLabel>\n              <Input\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                required\n              />\n            </FormControl>\n            <FormControl id=\"password\">\n              <FormLabel>Password</FormLabel>\n              <Input\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"password\"\n                required\n              />\n            </FormControl>\n            <Button\n              isLoading={isSubmiting}\n              type=\"submit\"\n              colorScheme=\"primary\"\n              size=\"lg\"\n              fontSize=\"md\"\n            >\n              Sign up\n            </Button>\n          </Stack>\n        </chakra.form>\n        <Center my={4}>\n          <Button variant=\"link\" onClick={() => history.push(\"/login\")}>\n            Login\n          </Button>\n        </Center>\n        <DividerWithText my={6}>OR</DividerWithText>\n        <Button\n          variant=\"outline\"\n          isFullWidth\n          colorScheme=\"red\"\n          leftIcon={<FaGoogle />}\n          onClick={() =>\n            signInwithGoogle()\n              .then((user) => console.log(user))\n              .catch((error) => console.log(error))\n          }\n        >\n          Sign in with Google\n        </Button>\n      </Card>\n    </Layout>\n  );\n}\n","/home/arnab/ReactuiFirebase/src/hooks/useMounted.js",["118"],"import React, { useEffect, useRef } from \"react\";\n\nexport default function useMounted() {\n    const mounted = useRef(false)\n\n    useEffect(() => {\n        mounted.current = true\n        return () => {\n            mounted.current = false\n        }\n    }, [])\n    return mounted; \n}","/home/arnab/ReactuiFirebase/src/components/Layout.jsx",["119"],"import React from \"react\";\nimport { Container, Box } from \"@chakra-ui/react\";\nimport { Navbar } from \"./Navbar\";\n// import Particles from \"react-particles-js\";\nimport Particles from \"../Particles/Particle\";\nexport function Layout(props) {\n  return (\n    <>\n      <Particles>\n        {/* <div> */}\n        <Navbar />\n        {/* <Particles\n          params={{\n            particles: {\n              number: {\n                value: 200,\n                density: {\n                  enable: true,\n                  value_area: 1000,\n                },\n\n              },\n            },\n          }}\n        > */}\n\n        <Container maxW=\"container.lg\">{props.children}</Container>\n      </Particles>\n      {/* </Particles>\n      </div> */}\n    </>\n  );\n}\n","/home/arnab/ReactuiFirebase/src/components/DividerWithText.jsx",[],"/home/arnab/ReactuiFirebase/src/components/Card.jsx",[],"/home/arnab/ReactuiFirebase/src/components/Navbar.jsx",[],"/home/arnab/ReactuiFirebase/src/components/Navlink.jsx",[],"/home/arnab/ReactuiFirebase/src/CustomTheme.js",[],"/home/arnab/ReactuiFirebase/src/Particles/Particle.jsx",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":4,"column":3,"nodeType":"126","messageId":"127","endLine":4,"endColumn":8},{"ruleId":"124","severity":1,"message":"128","line":5,"column":3,"nodeType":"126","messageId":"127","endLine":5,"endColumn":9},{"ruleId":"124","severity":1,"message":"129","line":6,"column":3,"nodeType":"126","messageId":"127","endLine":6,"endColumn":7},{"ruleId":"124","severity":1,"message":"130","line":7,"column":3,"nodeType":"126","messageId":"127","endLine":7,"endColumn":12},{"ruleId":"124","severity":1,"message":"131","line":8,"column":3,"nodeType":"126","messageId":"127","endLine":8,"endColumn":10},{"ruleId":"124","severity":1,"message":"132","line":18,"column":10,"nodeType":"126","messageId":"127","endLine":18,"endColumn":14},{"ruleId":"124","severity":1,"message":"125","line":2,"column":3,"nodeType":"126","messageId":"127","endLine":2,"endColumn":8},{"ruleId":"124","severity":1,"message":"128","line":3,"column":3,"nodeType":"126","messageId":"127","endLine":3,"endColumn":9},{"ruleId":"124","severity":1,"message":"129","line":4,"column":3,"nodeType":"126","messageId":"127","endLine":4,"endColumn":7},{"ruleId":"124","severity":1,"message":"133","line":6,"column":3,"nodeType":"126","messageId":"127","endLine":6,"endColumn":7},{"ruleId":"124","severity":1,"message":"134","line":7,"column":3,"nodeType":"126","messageId":"127","endLine":7,"endColumn":11},{"ruleId":"124","severity":1,"message":"135","line":8,"column":3,"nodeType":"126","messageId":"127","endLine":8,"endColumn":14},{"ruleId":"124","severity":1,"message":"136","line":9,"column":3,"nodeType":"126","messageId":"127","endLine":9,"endColumn":6},{"ruleId":"124","severity":1,"message":"137","line":11,"column":3,"nodeType":"126","messageId":"127","endLine":11,"endColumn":8},{"ruleId":"124","severity":1,"message":"138","line":15,"column":10,"nodeType":"126","messageId":"127","endLine":15,"endColumn":14},{"ruleId":"124","severity":1,"message":"139","line":18,"column":8,"nodeType":"126","messageId":"127","endLine":18,"endColumn":17},{"ruleId":"124","severity":1,"message":"140","line":11,"column":3,"nodeType":"126","messageId":"127","endLine":11,"endColumn":7},{"ruleId":"124","severity":1,"message":"141","line":12,"column":3,"nodeType":"126","messageId":"127","endLine":12,"endColumn":6},{"ruleId":"124","severity":1,"message":"142","line":13,"column":3,"nodeType":"126","messageId":"127","endLine":13,"endColumn":7},{"ruleId":"124","severity":1,"message":"143","line":15,"column":17,"nodeType":"126","messageId":"127","endLine":15,"endColumn":26},{"ruleId":"124","severity":1,"message":"144","line":15,"column":28,"nodeType":"126","messageId":"127","endLine":15,"endColumn":34},{"ruleId":"124","severity":1,"message":"143","line":12,"column":17,"nodeType":"126","messageId":"127","endLine":12,"endColumn":26},{"ruleId":"124","severity":1,"message":"144","line":12,"column":28,"nodeType":"126","messageId":"127","endLine":12,"endColumn":34},{"ruleId":"124","severity":1,"message":"145","line":1,"column":8,"nodeType":"126","messageId":"127","endLine":1,"endColumn":13},{"ruleId":"124","severity":1,"message":"141","line":2,"column":21,"nodeType":"126","messageId":"127","endLine":2,"endColumn":24},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"no-unused-vars","'Badge' is defined but never used.","Identifier","unusedVar","'chakra' is defined but never used.","'Code' is defined but never used.","'Container' is defined but never used.","'Heading' is defined but never used.","'Card' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'OrderedList' is defined but never used.","'Tag' is defined but never used.","'Image' is defined but never used.","'Link' is defined but never used.","'Particles' is defined but never used.","'Text' is defined but never used.","'Box' is defined but never used.","'Flex' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]