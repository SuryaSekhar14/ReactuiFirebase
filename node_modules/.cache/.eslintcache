[{"/home/arnab/ReactuiFirebase/src/index.js":"1","/home/arnab/ReactuiFirebase/src/App.js":"2","/home/arnab/ReactuiFirebase/src/contexts/AuthContext.js":"3","/home/arnab/ReactuiFirebase/src/components/AppRouter.jsx":"4","/home/arnab/ReactuiFirebase/src/utils/init-firebase.js":"5","/home/arnab/ReactuiFirebase/src/pages/NotfoundPage.jsx":"6","/home/arnab/ReactuiFirebase/src/pages/ForgotPasswordPage.jsx":"7","/home/arnab/ReactuiFirebase/src/pages/Profilepage.jsx":"8","/home/arnab/ReactuiFirebase/src/pages/Homepage.jsx":"9","/home/arnab/ReactuiFirebase/src/pages/ProtectedPage.jsx":"10","/home/arnab/ReactuiFirebase/src/pages/Loginpage.jsx":"11","/home/arnab/ReactuiFirebase/src/pages/ResetPasswordPage.jsx":"12","/home/arnab/ReactuiFirebase/src/pages/Registerpage.jsx":"13","/home/arnab/ReactuiFirebase/src/hooks/useMounted.js":"14","/home/arnab/ReactuiFirebase/src/components/Layout.jsx":"15","/home/arnab/ReactuiFirebase/src/components/DividerWithText.jsx":"16","/home/arnab/ReactuiFirebase/src/components/Card.jsx":"17","/home/arnab/ReactuiFirebase/src/components/Navbar.jsx":"18","/home/arnab/ReactuiFirebase/src/components/Navlink.jsx":"19","/home/arnab/ReactuiFirebase/src/CustomTheme.js":"20","/home/arnab/ReactuiFirebase/src/Particles/Particle.jsx":"21","/home/arnab/ReactuiFirebase/src/components/Navbar2.tsx":"22","/home/arnab/ReactuiFirebase/src/pages/CalltoAction.jsx":"23","/home/arnab/ReactuiFirebase/src/pages/Payment.jsx":"24","/home/arnab/ReactuiFirebase/src/pages/Payment2.jsx":"25"},{"size":643,"mtime":1640170520657,"results":"26","hashOfConfig":"27"},{"size":258,"mtime":1640066836658,"results":"28","hashOfConfig":"27"},{"size":1953,"mtime":1640112862510,"results":"29","hashOfConfig":"27"},{"size":1789,"mtime":1640170424552,"results":"30","hashOfConfig":"27"},{"size":606,"mtime":1640066369779,"results":"31","hashOfConfig":"27"},{"size":241,"mtime":1640008681939,"results":"32","hashOfConfig":"27"},{"size":2328,"mtime":1640100315310,"results":"33","hashOfConfig":"27"},{"size":2912,"mtime":1640181197170,"results":"34","hashOfConfig":"27"},{"size":1516,"mtime":1640240761981,"results":"35","hashOfConfig":"27"},{"size":442,"mtime":1640258579130,"results":"36","hashOfConfig":"27"},{"size":5721,"mtime":1640242917737,"results":"37","hashOfConfig":"27"},{"size":2412,"mtime":1640108951770,"results":"38","hashOfConfig":"27"},{"size":5502,"mtime":1640257558060,"results":"39","hashOfConfig":"27"},{"size":280,"mtime":1640087650107,"results":"40","hashOfConfig":"27"},{"size":779,"mtime":1640239288734,"results":"41","hashOfConfig":"27"},{"size":619,"mtime":1640008681939,"results":"42","hashOfConfig":"27"},{"size":287,"mtime":1640008681939,"results":"43","hashOfConfig":"27"},{"size":1547,"mtime":1640240195186,"results":"44","hashOfConfig":"27"},{"size":504,"mtime":1640008747087,"results":"45","hashOfConfig":"27"},{"size":585,"mtime":1640155481469,"results":"46","hashOfConfig":"27"},{"size":729,"mtime":1640243095336,"results":"47","hashOfConfig":"27"},{"size":2377,"mtime":1640238664914,"results":"48","hashOfConfig":"27"},{"size":8230,"mtime":1640257465350,"results":"49","hashOfConfig":"27"},{"size":5855,"mtime":1640258232696,"results":"50","hashOfConfig":"27"},{"size":19454,"mtime":1640259648091,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1mvcev4",{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/arnab/ReactuiFirebase/src/index.js",[],["110","111"],"/home/arnab/ReactuiFirebase/src/App.js",[],"/home/arnab/ReactuiFirebase/src/contexts/AuthContext.js",[],"/home/arnab/ReactuiFirebase/src/components/AppRouter.jsx",[],"/home/arnab/ReactuiFirebase/src/utils/init-firebase.js",[],"/home/arnab/ReactuiFirebase/src/pages/NotfoundPage.jsx",[],"/home/arnab/ReactuiFirebase/src/pages/ForgotPasswordPage.jsx",[],"/home/arnab/ReactuiFirebase/src/pages/Profilepage.jsx",["112","113","114","115","116","117"],"import React from \"react\";\nimport { Layout } from \"../components/Layout\";\nimport {\n  Badge,\n  chakra,\n  Code,\n  Container,\n  Heading,\n  Stack,\n  Circle,\n  Flex,\n  Box,\n  Text,\n  Button,\n} from \"@chakra-ui/react\";\nimport { Image } from \"@chakra-ui/image\";\nimport { useMediaQuery } from \"@chakra-ui/media-query\";\nimport { Card } from \"../components/Card\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { useColorMode } from \"@chakra-ui/color-mode\";\n\n\nexport default function Profilepage() {\n  const { colorMode } = useColorMode();\n  const isDark = colorMode === \"dark\";\n  const { currentUser } = useAuth();\n  const [isNotSmallerScreen] = useMediaQuery(\"(min-width:600px)\");\n  \n  return (\n    <Layout>\n      {/* <Heading>\n        Profile page\n        <Badge colorScheme='green' fontSize='lg' mx={4}>\n          Protected Page\n        </Badge>\n      </Heading>\n      \n      <Container maxW='container.lg' overflowX='auto' py={4}>\n        <chakra.pre>\n          {JSON.stringify(currentUser, null, 2)}\n        </chakra.pre>\n      </Container> */}\n      <Stack>\n        <Circle\n          position=\"absolute\"\n          bg=\"blue.100\"\n          opacity=\"0.1\"\n          w=\"300px\"\n          h=\"300px\"\n          alignSelf=\"flex-end\"\n        />\n        <Flex\n          direction={isNotSmallerScreen ? \"row\" : \"column\"}\n          spacing=\"200px\"\n          p={isNotSmallerScreen ? \"32\" : \"0\"}\n          alignSelf=\"flex-start\"\n        >\n          <Box mt={isNotSmallerScreen ? \"0\" : 16} align=\"flex-start\">\n            <Text fontSize=\"5xl\" fontWeight=\"semibold\">\n              Hi There!\n            </Text>\n            <Text\n              fontSize=\"7xl\"\n              fontWeight=\"bold\"\n              bgGradient=\"linear(to-r, cyan.400, blue.500, purple.600)\"\n              bgClip=\"text\"\n            >\n              {currentUser.displayName}\n            </Text>\n            <Text color={isDark ? \"gray.200\" : \"gray.500\"}>\n              Welcome OnBoard with AI Writer\n            </Text>\n          </Box>\n          <Image\n            alignSelf=\"center\"\n            mt={isNotSmallerScreen ? \"0\" : \"12\"}\n            mb={isNotSmallerScreen ? \"0\" : \"12\"}\n            borderRadius=\"full\"\n            backgroundColor=\"transparent\"\n            boxShadow=\"lg\"\n            boxSize=\"300px\"\n            src={currentUser.photoURL}\n          />\n        </Flex>\n        <Flex\n          direction={isNotSmallerScreen ? \"row\" : \"column\"}\n          spacing=\"100px\"\n          p={isNotSmallerScreen ? \"32\" : \"0\"}\n          alignSelf=\"flex-start\"\n        >\n          <Button\n            colorScheme=\"teal\"\n            size=\"lg\"\n            variant=\"outline\"\n           \n          >\n            Button\n          </Button>\n        </Flex>\n      </Stack>\n      {/* \n      <Container maxW=\"container.lg\" overflowX=\"auto\" py={4}>\n        <chakra.pre>{JSON.stringify(currentUser, null, 2)}</chakra.pre>\n      </Container> */}\n    </Layout>\n  );\n}\n","/home/arnab/ReactuiFirebase/src/pages/Homepage.jsx",["118","119","120","121","122","123","124","125","126","127","128","129","130"],"import {\n  Badge,\n  chakra,\n  Code,\n  Heading,\n  List,\n  ListItem,\n  OrderedList,\n  Tag,\n  Text,\n  Image,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { Layout } from \"../components/Layout\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\n// import Particles from \"react-particles-js\";\nimport Particles from \"../Particles/Particle\";\nimport CallToActionWithAnnotation from \"./CalltoAction\"\n\nexport default function Homepage() {\n  const { currentUser } = useAuth();\n  return (\n    <Layout>\n      {/* <Particles\n        params={{\n          particles: {\n            number: {\n              value: 200,\n              density: {\n                enable: true,\n                value_area: 1000,\n              },\n            },\n          },\n        }}\n        />\n          <div\n          style={{\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            width: \"100%\",\n            height: \"100%\"\n          }}\n        > */}\n\n      {/* <Heading>Home page</Heading>\n      <Text my={6}>{`The current user is ${currentUser}`}</Text> */}\n      <CallToActionWithAnnotation />\n      {/* <Image\n            alignSelf=\"center\"\n            // mt={isNotSmallerScreen ? \"0\" : \"12\"}\n            // mb={isNotSmallerScreen ? \"0\" : \"12\"}\n            borderRadius=\"full\"\n            backgroundColor=\"transparent\"\n            boxShadow=\"lg\"\n            boxSize=\"1000px\"\n            src={currentUser.photoURL}\n          /> */}\n      \n    </Layout>\n  );\n}\n","/home/arnab/ReactuiFirebase/src/pages/ProtectedPage.jsx",["131","132","133","134"],"/home/arnab/ReactuiFirebase/src/pages/Loginpage.jsx",["135","136","137","138"],"import {\n  Button,\n  chakra,\n  FormControl,\n  FormLabel,\n  Heading,\n  HStack,\n  Input,\n  Stack,\n  useToast,\n  Text,\n  Box,\n  Flex,\n  Checkbox,\n  Image,\n} from \"@chakra-ui/react\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { FaGoogle } from \"react-icons/fa\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { Card } from \"../components/Card\";\nimport DividerWithText from \"../components/DividerWithText\";\nimport { Layout } from \"../components/Layout\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport useMounted from \"../hooks/useMounted\";\nimport { useMediaQuery } from \"@chakra-ui/media-query\";\n\nexport default function Loginpage() {\n  const history = useHistory();\n  const location = useLocation();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isSubmiting, setisSubmiting] = useState(false);\n  const toast = useToast();\n\n  const { login, signInwithGoogle } = useAuth();\n  const mounted = useMounted();\n  const [isNotSmallerScreen] = useMediaQuery(\"(min-width:600px)\");\n\n  return (\n    <Layout>\n      <Heading textAlign=\"center\" my={12}>\n        Login\n      </Heading>\n      <Card maxW=\"md\" mx=\"auto\" mt={4}>\n        <chakra.form\n          onSubmit={async (e) => {\n            e.preventDefault();\n            // your login logic here\n            if (!email || !password) {\n              toast({\n                description: \"credentials not valid\",\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n              });\n            }\n            setisSubmiting(true);\n            login(email, password)\n              .then((response) => {\n                history.push(location.state?.from ?? \"/profile\");\n                console.log(response);\n              })\n              .catch((error) => {\n                console.log(error.message);\n\n                toast({\n                  description: error.message,\n                  status: \"error\",\n                  duration: 5000,\n                  isClosable: true,\n                });\n              })\n              .finally(() => mounted.current && setisSubmiting(false));\n          }}\n        >\n          <Stack spacing=\"6\">\n            <FormControl id=\"email\">\n              <FormLabel>Email address</FormLabel>\n              <Input\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                required\n              />\n            </FormControl>\n            <FormControl id=\"password\">\n              <FormLabel>Password</FormLabel>\n              <Input\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"password\"\n                required\n              />\n            </FormControl>\n            {/* <PasswordField /> */}\n            <Button\n              isLoading={isSubmiting}\n              type=\"submit\"\n              colorScheme=\"primary\"\n              size=\"lg\"\n              fontSize=\"md\"\n            >\n              Sign in\n            </Button>\n          </Stack>\n        </chakra.form>\n        <HStack justifyContent=\"space-between\" my={4}>\n          <Button variant=\"link\">\n            <Link to=\"/forgot-password\">Forgot password?</Link>\n          </Button>\n          <Button variant=\"link\" onClick={() => history.push(\"/register\")}>\n            Register\n          </Button>\n        </HStack>\n        <DividerWithText my={6}>OR</DividerWithText>\n        <Button\n          variant=\"outline\"\n          isFullWidth\n          colorScheme=\"red\"\n          leftIcon={<FaGoogle />}\n          onClick={() =>\n            signInwithGoogle()\n              .then((user) => console.log(user))\n              .catch((error) => console.log(error))\n          }\n        >\n          Sign in with Google\n        </Button>\n      </Card>\n      <Stack minH={\"100vh\"} direction={{ base: \"column\", md: \"row\" }}>\n        <Flex p={8} flex={1} align={\"center\"} justify={\"center\"}>\n          <Stack spacing={4} w={\"full\"} maxW={\"md\"}>\n            <Heading fontSize={\"2xl\"}>Sign in to your account</Heading>\n            <FormControl id=\"email\">\n              <FormLabel>Email address</FormLabel>\n              <Input type=\"email\" />\n            </FormControl>\n            <FormControl id=\"password\">\n              <FormLabel>Password</FormLabel>\n              <Input type=\"password\" />\n            </FormControl>\n            <Stack spacing={6}>\n              <Stack\n                direction={{ base: \"column\", sm: \"row\" }}\n                align={\"start\"}\n                justify={\"space-between\"}\n              >\n                <Checkbox>Remember me</Checkbox>\n                <Link color={\"blue.500\"}>Forgot password?</Link>\n              </Stack>\n              <Button colorScheme={\"blue\"} variant={\"solid\"}>\n                Sign in\n              </Button>\n            </Stack>\n          </Stack>\n        </Flex>\n        <Flex flex={1}>\n          <Image\n            alignSelf=\"center\"\n            mt={isNotSmallerScreen ? \"0\" : \"12\"}\n            mb={isNotSmallerScreen ? \"0\" : \"12\"}\n            borderRadius=\"full\"\n            backgroundColor=\"transparent\"\n            boxShadow=\"lg\"\n            boxSize=\"400px\"\n            alt={\"Login Image\"}\n            objectFit={\"cover\"}\n            src={\n              \"https://images.unsplash.com/photo-1486312338219-ce68d2c6f44d?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1352&q=80\"\n            }\n          />\n        </Flex>\n      </Stack>\n    </Layout>\n  );\n}\n","/home/arnab/ReactuiFirebase/src/pages/ResetPasswordPage.jsx",[],"/home/arnab/ReactuiFirebase/src/pages/Registerpage.jsx",["139","140"],"import {\n  Button,\n  Center,\n  chakra,\n  FormControl,\n  FormLabel,\n  Heading,\n  Input,\n  Stack,\n  useToast,\n  Flex,\n  Image,\n  Link,\n  Checkbox,\n} from \"@chakra-ui/react\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { FaGoogle } from \"react-icons/fa\";\nimport { useHistory } from \"react-router-dom\";\nimport { Card } from \"../components/Card\";\nimport DividerWithText from \"../components/DividerWithText\";\nimport { Layout } from \"../components/Layout\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport useMounted from \"../hooks/useMounted\";\nimport { useMediaQuery } from \"@chakra-ui/media-query\";\n\nexport default function Registerpage() {\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isSubmiting, setisSubmiting] = useState(false);\n  const toast = useToast();\n\n  const { register, signInwithGoogle } = useAuth();\n  const [isNotSmallerScreen] = useMediaQuery(\"(min-width:600px)\");\n\n  const mounted = useMounted();\n\n  return (\n    <Layout>\n      <Heading textAlign=\"center\" my={12}>\n        Register\n      </Heading>\n      <Card maxW=\"md\" mx=\"auto\" mt={4}>\n        <chakra.form\n          onSubmit={async (e) => {\n            e.preventDefault();\n            // your register logic here\n            // console.log(email, password)\n            if (!email || !password) {\n              toast({\n                description: \"credentials not valid\",\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n              });\n            }\n            setisSubmiting(true);\n            register(email, password)\n              .then((response) => {\n                history.push(\"/profile\");\n                console.log(response);\n              })\n              .catch((error) => {\n                console.log(error.message);\n\n                toast({\n                  description: error.message,\n                  status: \"error\",\n                  duration: 5000,\n                  isClosable: true,\n                });\n              })\n              .finally(() => mounted.current && setisSubmiting(false));\n          }}\n        >\n          <Stack spacing=\"6\">\n            <FormControl id=\"email\">\n              <FormLabel>Email address</FormLabel>\n              <Input\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                required\n              />\n            </FormControl>\n            <FormControl id=\"password\">\n              <FormLabel>Password</FormLabel>\n              <Input\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"password\"\n                required\n              />\n            </FormControl>\n            <Button\n              isLoading={isSubmiting}\n              type=\"submit\"\n              colorScheme=\"primary\"\n              size=\"lg\"\n              fontSize=\"md\"\n            >\n              Sign up\n            </Button>\n          </Stack>\n        </chakra.form>\n        <Center my={4}>\n          <Button variant=\"link\" onClick={() => history.push(\"/login\")}>\n            Login\n          </Button>\n        </Center>\n        <DividerWithText my={6}>OR</DividerWithText>\n        <Button\n          variant=\"outline\"\n          isFullWidth\n          colorScheme=\"red\"\n          leftIcon={<FaGoogle />}\n          onClick={() =>\n            signInwithGoogle()\n              .then((user) => console.log(user))\n              .catch((error) => console.log(error))\n          }\n        >\n          Sign in with Google\n        </Button>\n      </Card>\n      <Stack minH={\"100vh\"} direction={{ base: \"column\", md: \"row\" }}>\n        <Flex p={8} flex={1} align={\"center\"} justify={\"center\"}>\n          <Stack spacing={4} w={\"full\"} maxW={\"md\"}>\n            <Heading fontSize={\"2xl\"}>Register your account</Heading>\n            <FormControl id=\"email\">\n              <FormLabel>Email address</FormLabel>\n              <Input type=\"email\" />\n            </FormControl>\n            <FormControl id=\"password\">\n              <FormLabel>Password</FormLabel>\n              <Input type=\"password\" />\n            </FormControl>\n            <Stack spacing={6}>\n              <Stack\n                direction={{ base: \"column\", sm: \"row\" }}\n                align={\"start\"}\n                justify={\"space-between\"}\n              >\n                <Checkbox>Remember me</Checkbox>\n                <Link color={\"blue.500\"}>Forgot password?</Link>\n              </Stack>\n              <Button colorScheme={\"blue\"} variant={\"solid\"}>\n                Sign in\n              </Button>\n            </Stack>\n          </Stack>\n        </Flex>\n        <Flex flex={1}>\n          <Image\n            alignSelf=\"center\"\n            mt={isNotSmallerScreen ? \"0\" : \"12\"}\n            mb={isNotSmallerScreen ? \"0\" : \"12\"}\n            borderRadius=\"full\"\n            backgroundColor=\"transparent\"\n            boxShadow=\"lg\"\n            boxSize=\"400px\"\n            alt={\"Login Image\"}\n            objectFit={\"cover\"}\n            src={\n              \"https://images.unsplash.com/photo-1486312338219-ce68d2c6f44d?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1352&q=80\"\n            }\n          />\n        </Flex>\n      </Stack>\n    </Layout>\n  );\n}\n","/home/arnab/ReactuiFirebase/src/hooks/useMounted.js",["141"],"import React, { useEffect, useRef } from \"react\";\n\nexport default function useMounted() {\n    const mounted = useRef(false)\n\n    useEffect(() => {\n        mounted.current = true\n        return () => {\n            mounted.current = false\n        }\n    }, [])\n    return mounted; \n}","/home/arnab/ReactuiFirebase/src/components/Layout.jsx",["142"],"import React from \"react\";\nimport { Container, Box } from \"@chakra-ui/react\";\nimport { Navbar } from \"./Navbar\";\n\n\n// import Particles from \"react-particles-js\";\nimport Particles from \"../Particles/Particle\";\nexport function Layout(props) {\n  return (\n    <>\n      <Particles>\n        {/* <div> */}\n        <Navbar />\n        {/* <Nav /> */}\n        {/* <Particles\n          params={{\n            particles: {\n              number: {\n                value: 200,\n                density: {\n                  enable: true,\n                  value_area: 1000,\n                },\n\n              },\n            },\n          }}\n        > */}\n\n        <Container maxW=\"container.lg\">{props.children}</Container>\n      </Particles>\n      {/* </Particles>\n      </div> */}\n    </>\n  );\n}\n","/home/arnab/ReactuiFirebase/src/components/DividerWithText.jsx",[],"/home/arnab/ReactuiFirebase/src/components/Card.jsx",[],"/home/arnab/ReactuiFirebase/src/components/Navbar.jsx",[],"/home/arnab/ReactuiFirebase/src/components/Navlink.jsx",[],"/home/arnab/ReactuiFirebase/src/CustomTheme.js",[],"/home/arnab/ReactuiFirebase/src/Particles/Particle.jsx",[],"/home/arnab/ReactuiFirebase/src/components/Navbar2.tsx",["143","144","145","146"],"/home/arnab/ReactuiFirebase/src/pages/CalltoAction.jsx",["147"],"// import Head from 'next/head';\nimport {\n  Box,\n  Heading,\n  Container,\n  Text,\n  Button,\n  Stack,\n  Icon,\n  useColorModeValue,\n  createIcon,\n  Flex,\n  useBreakpointValue,\n  VStack,\n} from \"@chakra-ui/react\";\nimport { Image } from \"@chakra-ui/image\";\nimport { useMediaQuery } from \"@chakra-ui/media-query\";\n\nexport default function CallToActionWithAnnotation() {\n  const [isNotSmallerScreen] = useMediaQuery(\"(min-width:600px)\");\n  return (\n    <>\n      <Container maxW={\"3xl\"}>\n        <Stack\n          as={Box}\n          textAlign={\"center\"}\n          spacing={{ base: 8, md: 14 }}\n          py={{ base: 20, md: 36 }}\n        >\n          <Heading\n            fontWeight={600}\n            fontSize={{ base: \"2xl\", sm: \"4xl\", md: \"6xl\" }}\n            lineHeight={\"110%\"}\n          >\n            Welcome to AI Writer\n            <br />\n            <Text as={\"span\"} color={\"green.400\"}>\n              AI is the Future of Business\n            </Text>\n          </Heading>\n          <Text color={\"gray.500\"}>\n            “Artificial intelligence would be the ultimate version of Google.\n            The ultimate search engine that would understand everything on the\n            web. It would understand exactly what you wanted, and it would give\n            you the right thing. We’re nowhere near doing that now. However, we\n            can get incrementally closer to that, and that is basically what we\n            work on.”\n          </Text>\n          <Stack\n            direction={\"column\"}\n            spacing={3}\n            align={\"center\"}\n            alignSelf={\"center\"}\n            position={\"relative\"}\n          >\n            <Button\n              colorScheme={\"green\"}\n              bg={\"green.400\"}\n              rounded={\"full\"}\n              px={6}\n              _hover={{\n                bg: \"green.500\",\n              }}\n            >\n              Get Started\n            </Button>\n\n            <Box>\n              <Icon\n                as={Arrow}\n                color={useColorModeValue(\"gray.800\", \"gray.300\")}\n                w={71}\n                position={\"absolute\"}\n                right={-71}\n                top={\"10px\"}\n              />\n              <Text\n                fontSize={\"lg\"}\n                fontFamily={\"Caveat\"}\n                position={\"absolute\"}\n                right={\"-125px\"}\n                top={\"-15px\"}\n                transform={\"rotate(10deg)\"}\n              >\n                Starting at $15/mo\n              </Text>\n            </Box>\n          </Stack>\n          {/* <Flex\n            w={\"full\"}\n            h={\"100vh\"}\n            backgroundImage={\n              \"url(https://images.unsplash.com/photo-1600267175161-cfaa711b4a81?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80)\"\n            }\n            backgroundSize={\"cover\"}\n            backgroundPosition={\"center center\"}\n          >\n            <VStack\n              w={\"full\"}\n              justify={\"center\"}\n              px={useBreakpointValue({ base: 4, md: 8 })}\n              bgGradient={\"linear(to-r, blackAlpha.600, transparent)\"}\n            >\n              <Stack maxW={\"2xl\"} align={\"flex-start\"} spacing={6}>\n                <Text\n                  color={\"white\"}\n                  fontWeight={700}\n                  lineHeight={1.2}\n                  fontSize={useBreakpointValue({ base: \"3xl\", md: \"4xl\" })}\n                >\n                  Lorem ipsum dolor sit amet consectetur adipiscing elit sed do\n                  eiusmod tempor\n                </Text>\n                <Stack direction={\"row\"}>\n                  <Button\n                    bg={\"green.400\"}\n                    rounded={\"full\"}\n                    color={\"white\"}\n                    _hover={{ bg: \"green.500\" }}\n                  >\n                    Show me more\n                  </Button>\n                  <Button\n                    bg={\"whiteAlpha.300\"}\n                    rounded={\"full\"}\n                    color={\"white\"}\n                    _hover={{ bg: \"whiteAlpha.500\" }}\n                  >\n                   Show me more\n                  </Button>\n                </Stack>\n              </Stack>\n            </VStack>\n          </Flex> */}\n        </Stack>\n        <Stack minH={\"100vh\"} direction={{ base: \"column\", md: \"row\" }}>\n          <Flex p={8} flex={1} align={\"center\"} justify={\"center\"}>\n            <Stack spacing={6} w={\"full\"} maxW={\"lg\"}>\n              <Heading fontSize={{ base: \"3xl\", md: \"4xl\", lg: \"5xl\" }}>\n                <Text\n                  as={\"span\"}\n                  position={\"relative\"}\n                  _after={{\n                    content: \"''\",\n                    width: \"full\",\n                    height: useBreakpointValue({ base: \"20%\", md: \"30%\" }),\n                    position: \"absolute\",\n                    bottom: 1,\n                    left: 0,\n                    bg: \"green.400\",\n                    zIndex: -1,\n                  }}\n                >\n                  Freelance\n                </Text>\n                <br />{\" \"}\n                <Text color={\"green.400\"} as={\"span\"}>\n                  Design Projects\n                </Text>{\" \"}\n              </Heading>\n              <Text fontSize={{ base: \"md\", lg: \"lg\" }} color={\"gray.500\"}>\n                The project board is an exclusive resource for contract work.\n                It's perfect for freelancers, agencies, and moonlighters.\n              </Text>\n              <Stack direction={{ base: \"column\", md: \"row\" }} spacing={4}>\n                <Button\n                  rounded={\"full\"}\n                  bg={\"green.400\"}\n                  color={\"white\"}\n                  _hover={{\n                    bg: \"green.500\",\n                  }}\n                >\n                  Create Project\n                </Button>\n                <Button rounded={\"full\"}>How It Works</Button>\n              </Stack>\n            </Stack>\n          </Flex>\n          <Flex flex={6}>\n            {/* <Image\n              alt={\"Login Image\"}\n             \n              src={\n                \"https://images.unsplash.com/photo-1527689368864-3a821dbccc34?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\"\n              }\n            /> */}\n            <Image\n              alignSelf=\"center\"\n              mt={isNotSmallerScreen ? \"0\" : \"12\"}\n              mb={isNotSmallerScreen ? \"0\" : \"12\"}\n              borderRadius=\"full\"\n              backgroundColor=\"transparent\"\n              boxShadow=\"lg\"\n              boxSize=\"400px\"\n              src=\"https://images.unsplash.com/photo-1527689368864-3a821dbccc34?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\"\n            />\n          </Flex>\n        </Stack>\n      </Container>\n    </>\n  );\n}\n\nconst Arrow = createIcon({\n  displayName: \"Arrow\",\n  viewBox: \"0 0 72 24\",\n  path: (\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M0.600904 7.08166C0.764293 6.8879 1.01492 6.79004 1.26654 6.82177C2.83216 7.01918 5.20326 7.24581 7.54543 7.23964C9.92491 7.23338 12.1351 6.98464 13.4704 6.32142C13.84 6.13785 14.2885 6.28805 14.4722 6.65692C14.6559 7.02578 14.5052 7.47362 14.1356 7.6572C12.4625 8.48822 9.94063 8.72541 7.54852 8.7317C5.67514 8.73663 3.79547 8.5985 2.29921 8.44247C2.80955 9.59638 3.50943 10.6396 4.24665 11.7384C4.39435 11.9585 4.54354 12.1809 4.69301 12.4068C5.79543 14.0733 6.88128 15.8995 7.1179 18.2636C7.15893 18.6735 6.85928 19.0393 6.4486 19.0805C6.03792 19.1217 5.67174 18.8227 5.6307 18.4128C5.43271 16.4346 4.52957 14.868 3.4457 13.2296C3.3058 13.0181 3.16221 12.8046 3.01684 12.5885C2.05899 11.1646 1.02372 9.62564 0.457909 7.78069C0.383671 7.53862 0.437515 7.27541 0.600904 7.08166ZM5.52039 10.2248C5.77662 9.90161 6.24663 9.84687 6.57018 10.1025C16.4834 17.9344 29.9158 22.4064 42.0781 21.4773C54.1988 20.5514 65.0339 14.2748 69.9746 0.584299C70.1145 0.196597 70.5427 -0.0046455 70.931 0.134813C71.3193 0.274276 71.5206 0.70162 71.3807 1.08932C66.2105 15.4159 54.8056 22.0014 42.1913 22.965C29.6185 23.9254 15.8207 19.3142 5.64226 11.2727C5.31871 11.0171 5.26415 10.5479 5.52039 10.2248Z\"\n      fill=\"currentColor\"\n    />\n  ),\n});\n","/home/arnab/ReactuiFirebase/src/pages/Payment.jsx",["148"],"/home/arnab/ReactuiFirebase/src/pages/Payment2.jsx",["149","150"],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":4,"column":3,"nodeType":"157","messageId":"158","endLine":4,"endColumn":8},{"ruleId":"155","severity":1,"message":"159","line":5,"column":3,"nodeType":"157","messageId":"158","endLine":5,"endColumn":9},{"ruleId":"155","severity":1,"message":"160","line":6,"column":3,"nodeType":"157","messageId":"158","endLine":6,"endColumn":7},{"ruleId":"155","severity":1,"message":"161","line":7,"column":3,"nodeType":"157","messageId":"158","endLine":7,"endColumn":12},{"ruleId":"155","severity":1,"message":"162","line":8,"column":3,"nodeType":"157","messageId":"158","endLine":8,"endColumn":10},{"ruleId":"155","severity":1,"message":"163","line":18,"column":10,"nodeType":"157","messageId":"158","endLine":18,"endColumn":14},{"ruleId":"155","severity":1,"message":"156","line":2,"column":3,"nodeType":"157","messageId":"158","endLine":2,"endColumn":8},{"ruleId":"155","severity":1,"message":"159","line":3,"column":3,"nodeType":"157","messageId":"158","endLine":3,"endColumn":9},{"ruleId":"155","severity":1,"message":"160","line":4,"column":3,"nodeType":"157","messageId":"158","endLine":4,"endColumn":7},{"ruleId":"155","severity":1,"message":"162","line":5,"column":3,"nodeType":"157","messageId":"158","endLine":5,"endColumn":10},{"ruleId":"155","severity":1,"message":"164","line":6,"column":3,"nodeType":"157","messageId":"158","endLine":6,"endColumn":7},{"ruleId":"155","severity":1,"message":"165","line":7,"column":3,"nodeType":"157","messageId":"158","endLine":7,"endColumn":11},{"ruleId":"155","severity":1,"message":"166","line":8,"column":3,"nodeType":"157","messageId":"158","endLine":8,"endColumn":14},{"ruleId":"155","severity":1,"message":"167","line":9,"column":3,"nodeType":"157","messageId":"158","endLine":9,"endColumn":6},{"ruleId":"155","severity":1,"message":"168","line":10,"column":3,"nodeType":"157","messageId":"158","endLine":10,"endColumn":7},{"ruleId":"155","severity":1,"message":"169","line":11,"column":3,"nodeType":"157","messageId":"158","endLine":11,"endColumn":8},{"ruleId":"155","severity":1,"message":"170","line":15,"column":10,"nodeType":"157","messageId":"158","endLine":15,"endColumn":14},{"ruleId":"155","severity":1,"message":"171","line":18,"column":8,"nodeType":"157","messageId":"158","endLine":18,"endColumn":17},{"ruleId":"155","severity":1,"message":"172","line":22,"column":11,"nodeType":"157","messageId":"158","endLine":22,"endColumn":22},{"ruleId":"155","severity":1,"message":"162","line":1,"column":10,"nodeType":"157","messageId":"158","endLine":1,"endColumn":17},{"ruleId":"155","severity":1,"message":"161","line":1,"column":19,"nodeType":"157","messageId":"158","endLine":1,"endColumn":28},{"ruleId":"155","severity":1,"message":"156","line":1,"column":30,"nodeType":"157","messageId":"158","endLine":1,"endColumn":35},{"ruleId":"155","severity":1,"message":"173","line":4,"column":8,"nodeType":"157","messageId":"158","endLine":4,"endColumn":15},{"ruleId":"155","severity":1,"message":"168","line":11,"column":3,"nodeType":"157","messageId":"158","endLine":11,"endColumn":7},{"ruleId":"155","severity":1,"message":"174","line":12,"column":3,"nodeType":"157","messageId":"158","endLine":12,"endColumn":6},{"ruleId":"155","severity":1,"message":"175","line":17,"column":17,"nodeType":"157","messageId":"158","endLine":17,"endColumn":26},{"ruleId":"155","severity":1,"message":"176","line":17,"column":28,"nodeType":"157","messageId":"158","endLine":17,"endColumn":34},{"ruleId":"155","severity":1,"message":"175","line":16,"column":17,"nodeType":"157","messageId":"158","endLine":16,"endColumn":26},{"ruleId":"155","severity":1,"message":"176","line":16,"column":28,"nodeType":"157","messageId":"158","endLine":16,"endColumn":34},{"ruleId":"155","severity":1,"message":"177","line":1,"column":8,"nodeType":"157","messageId":"158","endLine":1,"endColumn":13},{"ruleId":"155","severity":1,"message":"174","line":2,"column":21,"nodeType":"157","messageId":"158","endLine":2,"endColumn":24},{"ruleId":"178","severity":1,"message":"179","line":23,"column":7,"nodeType":"157","messageId":"158","endLine":23,"endColumn":14},{"ruleId":"178","severity":1,"message":"180","line":39,"column":11,"nodeType":"157","messageId":"158","endLine":39,"endColumn":17},{"ruleId":"178","severity":1,"message":"181","line":39,"column":19,"nodeType":"157","messageId":"158","endLine":39,"endColumn":25},{"ruleId":"178","severity":1,"message":"182","line":39,"column":27,"nodeType":"157","messageId":"158","endLine":39,"endColumn":34},{"ruleId":"155","severity":1,"message":"183","line":14,"column":3,"nodeType":"157","messageId":"158","endLine":14,"endColumn":9},{"ruleId":"155","severity":1,"message":"184","line":24,"column":3,"nodeType":"157","messageId":"158","endLine":24,"endColumn":13},{"ruleId":"155","severity":1,"message":"185","line":14,"column":3,"nodeType":"157","messageId":"158","endLine":14,"endColumn":11},{"ruleId":"155","severity":1,"message":"186","line":24,"column":3,"nodeType":"157","messageId":"158","endLine":24,"endColumn":11},"no-native-reassign",["187"],"no-negated-in-lhs",["188"],"no-unused-vars","'Badge' is defined but never used.","Identifier","unusedVar","'chakra' is defined but never used.","'Code' is defined but never used.","'Container' is defined but never used.","'Heading' is defined but never used.","'Card' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'OrderedList' is defined but never used.","'Tag' is defined but never used.","'Text' is defined but never used.","'Image' is defined but never used.","'Link' is defined but never used.","'Particles' is defined but never used.","'currentUser' is assigned a value but never used.","'Contact' is defined but never used.","'Box' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'React' is defined but never used.","@typescript-eslint/no-unused-vars","'NavLink' is assigned a value but never used.","'isOpen' is assigned a value but never used.","'onOpen' is assigned a value but never used.","'onClose' is assigned a value but never used.","'VStack' is defined but never used.","'MdFacebook' is defined but never used.","'Textarea' is defined but never used.","'BsPerson' is defined but never used.","no-global-assign","no-unsafe-negation"]