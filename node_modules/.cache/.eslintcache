[{"/home/arnab/ReactuiFirebase/src/index.js":"1","/home/arnab/ReactuiFirebase/src/App.js":"2","/home/arnab/ReactuiFirebase/src/contexts/AuthContext.js":"3","/home/arnab/ReactuiFirebase/src/components/AppRouter.jsx":"4","/home/arnab/ReactuiFirebase/src/utils/init-firebase.js":"5","/home/arnab/ReactuiFirebase/src/pages/NotfoundPage.jsx":"6","/home/arnab/ReactuiFirebase/src/pages/ForgotPasswordPage.jsx":"7","/home/arnab/ReactuiFirebase/src/pages/Profilepage.jsx":"8","/home/arnab/ReactuiFirebase/src/pages/Homepage.jsx":"9","/home/arnab/ReactuiFirebase/src/pages/ProtectedPage.jsx":"10","/home/arnab/ReactuiFirebase/src/pages/Loginpage.jsx":"11","/home/arnab/ReactuiFirebase/src/pages/ResetPasswordPage.jsx":"12","/home/arnab/ReactuiFirebase/src/pages/Registerpage.jsx":"13","/home/arnab/ReactuiFirebase/src/hooks/useMounted.js":"14","/home/arnab/ReactuiFirebase/src/components/Layout.jsx":"15","/home/arnab/ReactuiFirebase/src/components/DividerWithText.jsx":"16","/home/arnab/ReactuiFirebase/src/components/Card.jsx":"17","/home/arnab/ReactuiFirebase/src/components/Navbar.jsx":"18","/home/arnab/ReactuiFirebase/src/components/Navlink.jsx":"19"},{"size":601,"mtime":1640008747087,"results":"20","hashOfConfig":"21"},{"size":258,"mtime":1640066836658,"results":"22","hashOfConfig":"21"},{"size":1470,"mtime":1640072741522,"results":"23","hashOfConfig":"21"},{"size":1189,"mtime":1640008747087,"results":"24","hashOfConfig":"21"},{"size":606,"mtime":1640066369779,"results":"25","hashOfConfig":"21"},{"size":241,"mtime":1640008681939,"results":"26","hashOfConfig":"21"},{"size":1375,"mtime":1640008747087,"results":"27","hashOfConfig":"21"},{"size":684,"mtime":1640072082618,"results":"28","hashOfConfig":"21"},{"size":516,"mtime":1640089304688,"results":"29","hashOfConfig":"21"},{"size":449,"mtime":1640008747087,"results":"30","hashOfConfig":"21"},{"size":3820,"mtime":1640087725484,"results":"31","hashOfConfig":"21"},{"size":1078,"mtime":1640008747087,"results":"32","hashOfConfig":"21"},{"size":3658,"mtime":1640087793604,"results":"33","hashOfConfig":"21"},{"size":280,"mtime":1640087650107,"results":"34","hashOfConfig":"21"},{"size":253,"mtime":1640008747087,"results":"35","hashOfConfig":"21"},{"size":619,"mtime":1640008681939,"results":"36","hashOfConfig":"21"},{"size":287,"mtime":1640008681939,"results":"37","hashOfConfig":"21"},{"size":1298,"mtime":1640072476004,"results":"38","hashOfConfig":"21"},{"size":504,"mtime":1640008747087,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1mvcev4",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/home/arnab/ReactuiFirebase/src/index.js",[],["85","86"],"/home/arnab/ReactuiFirebase/src/App.js",[],"/home/arnab/ReactuiFirebase/src/contexts/AuthContext.js",[],"/home/arnab/ReactuiFirebase/src/components/AppRouter.jsx",[],"/home/arnab/ReactuiFirebase/src/utils/init-firebase.js",[],"/home/arnab/ReactuiFirebase/src/pages/NotfoundPage.jsx",[],"/home/arnab/ReactuiFirebase/src/pages/ForgotPasswordPage.jsx",["87","88"],"import {\n  Button,\n  Center,\n  chakra,\n  FormControl,\n  FormLabel,\n  Heading,\n  Input,\n  Stack,\n  useToast,\n} from '@chakra-ui/react'\nimport React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Card } from '../components/Card'\nimport DividerWithText from '../components/DividerWithText'\nimport { Layout } from '../components/Layout'\n\nexport default function ForgotPasswordPage() {\n  const history = useHistory()\n\n  return (\n    <Layout>\n      <Heading textAlign='center' my={12}>\n        Forgot password\n      </Heading>\n      <Card maxW='md' mx='auto' mt={4}>\n        <chakra.form\n          onSubmit={async e => {\n            e.preventDefault()\n            // your forgot password logic here\n          }}\n        >\n          <Stack spacing='6'>\n            <FormControl id='email'>\n              <FormLabel>Email address</FormLabel>\n              <Input name='email' type='email' autoComplete='email' required />\n            </FormControl>\n            <Button type='submit' colorScheme='primary' size='lg' fontSize='md'>\n              Submit\n            </Button>\n          </Stack>\n        </chakra.form>\n        <DividerWithText my={6}>OR</DividerWithText>\n        <Center>\n          <Button variant='link' onClick={() => history.push('/login')}>\n            Login\n          </Button>\n        </Center>\n      </Card>\n    </Layout>\n  )\n}\n","/home/arnab/ReactuiFirebase/src/pages/Profilepage.jsx",["89","90"],"import React from 'react'\nimport { Layout } from '../components/Layout'\nimport { Badge, chakra, Code, Container, Heading } from '@chakra-ui/react'\nimport { Card } from '../components/Card'\nimport { useAuth } from '../contexts/AuthContext'\n\nexport default function Profilepage() {\n  const {currentUser}= useAuth()\n  return (\n    <Layout>\n      <Heading>\n        Profile page\n        <Badge colorScheme='green' fontSize='lg' mx={4}>\n          Protected Page\n        </Badge>\n      </Heading>\n\n      <Container maxW='container.lg' overflowX='auto' py={4}>\n        <chakra.pre>\n          {JSON.stringify(currentUser, null, 2)}\n        </chakra.pre>\n      </Container>\n    </Layout>\n  )\n}\n","/home/arnab/ReactuiFirebase/src/pages/Homepage.jsx",["91","92","93","94","95","96","97","98"],"/home/arnab/ReactuiFirebase/src/pages/ProtectedPage.jsx",[],"/home/arnab/ReactuiFirebase/src/pages/Loginpage.jsx",["99","100","101","102","103"],"import {\n  Button,\n  chakra,\n  FormControl,\n  FormLabel,\n  Heading,\n  HStack,\n  Input,\n  Stack,\n  useToast,\n  Text,\n  Box,\n  Flex,\n} from \"@chakra-ui/react\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { FaGoogle } from \"react-icons/fa\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Card } from \"../components/Card\";\nimport DividerWithText from \"../components/DividerWithText\";\nimport { Layout } from \"../components/Layout\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport useMounted from \"../hooks/useMounted\";\n\nexport default function Loginpage() {\n  const history = useHistory();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isSubmiting, setisSubmiting] = useState(false);\n  const toast = useToast();\n\n  const { login, signInwithGoogle } = useAuth();\n  const mounted = useMounted();\n\n  return (\n    <Layout>\n      <Heading textAlign=\"center\" my={12}>\n        Login\n      </Heading>\n      <Card maxW=\"md\" mx=\"auto\" mt={4}>\n        <chakra.form\n          onSubmit={async (e) => {\n            e.preventDefault();\n            // your login logic here\n            if (!email || !password) {\n              toast({\n                description: \"credentials not valid\",\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n              });\n            }\n            setisSubmiting(true);\n            login(email, password)\n              .then((response) => {\n                history.push(\"/profile\");\n                console.log(response);\n              })\n              .catch((error) => {\n                console.log(error.message);\n\n                toast({\n                  description: error.message,\n                  status: \"error\",\n                  duration: 5000,\n                  isClosable: true,\n                });\n              })\n              .finally(() => mounted.current && setisSubmiting(false));\n          }}\n        >\n          <Stack spacing=\"6\">\n            <FormControl id=\"email\">\n              <FormLabel>Email address</FormLabel>\n              <Input\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                required\n              />\n            </FormControl>\n            <FormControl id=\"password\">\n              <FormLabel>Password</FormLabel>\n              <Input\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"password\"\n                required\n              />\n            </FormControl>\n            {/* <PasswordField /> */}\n            <Button\n              isLoading={isSubmiting}\n              type=\"submit\"\n              colorScheme=\"primary\"\n              size=\"lg\"\n              fontSize=\"md\"\n            >\n              Sign in\n            </Button>\n          </Stack>\n        </chakra.form>\n        <HStack justifyContent=\"space-between\" my={4}>\n          <Button variant=\"link\">\n            <Link to=\"/forgot-password\">Forgot password?</Link>\n          </Button>\n          <Button variant=\"link\" onClick={() => history.push(\"/register\")}>\n            Register\n          </Button>\n        </HStack>\n        <DividerWithText my={6}>OR</DividerWithText>\n        <Button\n          variant=\"outline\"\n          isFullWidth\n          colorScheme=\"red\"\n          leftIcon={<FaGoogle />}\n          onClick={() =>\n            signInwithGoogle()\n              .then((user) => console.log(user))\n              .catch((error) => console.log(error))\n          }\n        >\n          Sign in with Google\n        </Button>\n      </Card>\n    </Layout>\n  );\n}\n","/home/arnab/ReactuiFirebase/src/pages/ResetPasswordPage.jsx",["104","105","106","107"],"import {\n  Button,\n  chakra,\n  FormControl,\n  FormLabel,\n  Heading,\n  Input,\n  Stack,\n  useToast,\n} from '@chakra-ui/react'\nimport React, { useState } from 'react'\nimport { Card } from '../components/Card'\nimport { Layout } from '../components/Layout'\nimport { useHistory, useLocation } from 'react-router-dom'\n\nexport default function ResetPasswordPage() {\n  return (\n    <Layout>\n      <Heading textAlign='center' my={12}>\n        Reset password\n      </Heading>\n      <Card maxW='md' mx='auto' mt={4}>\n        <chakra.form\n          onSubmit={async e => {\n            e.preventDefault()\n            // handle reset password\n          }}\n        >\n          <Stack spacing='6'>\n            <FormControl id='password'>\n              <FormLabel>New password</FormLabel>\n              <Input type='password' autoComplete='password' required />\n            </FormControl>\n            <Button type='submit' colorScheme='primary' size='lg' fontSize='md'>\n              Reset password\n            </Button>\n          </Stack>\n        </chakra.form>\n      </Card>\n    </Layout>\n  )\n}\n","/home/arnab/ReactuiFirebase/src/pages/Registerpage.jsx",["108","109"],"import {\n  Button,\n  Center,\n  chakra,\n  FormControl,\n  FormLabel,\n  Heading,\n  Input,\n  Stack,\n  useToast,\n} from \"@chakra-ui/react\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { FaGoogle } from \"react-icons/fa\";\nimport { useHistory } from \"react-router-dom\";\nimport { Card } from \"../components/Card\";\nimport DividerWithText from \"../components/DividerWithText\";\nimport { Layout } from \"../components/Layout\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport useMounted from \"../hooks/useMounted\";\n\nexport default function Registerpage() {\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isSubmiting, setisSubmiting] = useState(false);\n  const toast = useToast();\n\n  const { register, signInwithGoogle } = useAuth();\n\n  const mounted = useMounted();\n\n  return (\n    <Layout>\n      <Heading textAlign=\"center\" my={12}>\n        Register\n      </Heading>\n      <Card maxW=\"md\" mx=\"auto\" mt={4}>\n        <chakra.form\n          onSubmit={async (e) => {\n            e.preventDefault();\n            // your register logic here\n            // console.log(email, password)\n            if (!email || !password) {\n              toast({\n                description: \"credentials not valid\",\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n              });\n            }\n            setisSubmiting(true);\n            register(email, password)\n              .then((response) => {\n                history.push(\"/profile\");\n                console.log(response);\n              })\n              .catch((error) => {\n                console.log(error.message);\n\n                toast({\n                  description: error.message,\n                  status: \"error\",\n                  duration: 5000,\n                  isClosable: true,\n                });\n              })\n              .finally(() =>  mounted.current && setisSubmiting(false));\n          }}\n        >\n          <Stack spacing=\"6\">\n            <FormControl id=\"email\">\n              <FormLabel>Email address</FormLabel>\n              <Input\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                required\n              />\n            </FormControl>\n            <FormControl id=\"password\">\n              <FormLabel>Password</FormLabel>\n              <Input\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"password\"\n                required\n              />\n            </FormControl>\n            <Button\n              isLoading={isSubmiting}\n              type=\"submit\"\n              colorScheme=\"primary\"\n              size=\"lg\"\n              fontSize=\"md\"\n            >\n              Sign up\n            </Button>\n          </Stack>\n        </chakra.form>\n        <Center my={4}>\n          <Button variant=\"link\" onClick={() => history.push(\"/login\")}>\n            Login\n          </Button>\n        </Center>\n        <DividerWithText my={6}>OR</DividerWithText>\n        <Button\n          variant=\"outline\"\n          isFullWidth\n          colorScheme=\"red\"\n          leftIcon={<FaGoogle />}\n          onClick={() =>\n            signInwithGoogle()\n              .then((user) => console.log(user))\n              .catch((error) => console.log(error))\n          }\n        >\n          Sign in with Google\n        </Button>\n      </Card>\n    </Layout>\n  );\n}\n","/home/arnab/ReactuiFirebase/src/hooks/useMounted.js",["110"],"import React, { useEffect, useRef } from \"react\";\n\nexport default function useMounted() {\n    const mounted = useRef(false)\n\n    useEffect(() => {\n        mounted.current = true\n        return () => {\n            mounted.current = false\n        }\n    }, [])\n    return mounted; \n}","/home/arnab/ReactuiFirebase/src/components/Layout.jsx",[],"/home/arnab/ReactuiFirebase/src/components/DividerWithText.jsx",[],"/home/arnab/ReactuiFirebase/src/components/Card.jsx",[],"/home/arnab/ReactuiFirebase/src/components/Navbar.jsx",[],"/home/arnab/ReactuiFirebase/src/components/Navlink.jsx",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":10,"column":3,"nodeType":"117","messageId":"118","endLine":10,"endColumn":11},{"ruleId":"115","severity":1,"message":"119","line":12,"column":17,"nodeType":"117","messageId":"118","endLine":12,"endColumn":25},{"ruleId":"115","severity":1,"message":"120","line":3,"column":25,"nodeType":"117","messageId":"118","endLine":3,"endColumn":29},{"ruleId":"115","severity":1,"message":"121","line":4,"column":10,"nodeType":"117","messageId":"118","endLine":4,"endColumn":14},{"ruleId":"115","severity":1,"message":"122","line":2,"column":3,"nodeType":"117","messageId":"118","endLine":2,"endColumn":8},{"ruleId":"115","severity":1,"message":"123","line":3,"column":3,"nodeType":"117","messageId":"118","endLine":3,"endColumn":9},{"ruleId":"115","severity":1,"message":"120","line":4,"column":3,"nodeType":"117","messageId":"118","endLine":4,"endColumn":7},{"ruleId":"115","severity":1,"message":"124","line":6,"column":3,"nodeType":"117","messageId":"118","endLine":6,"endColumn":7},{"ruleId":"115","severity":1,"message":"125","line":7,"column":3,"nodeType":"117","messageId":"118","endLine":7,"endColumn":11},{"ruleId":"115","severity":1,"message":"126","line":8,"column":3,"nodeType":"117","messageId":"118","endLine":8,"endColumn":14},{"ruleId":"115","severity":1,"message":"127","line":9,"column":3,"nodeType":"117","messageId":"118","endLine":9,"endColumn":6},{"ruleId":"115","severity":1,"message":"128","line":14,"column":10,"nodeType":"117","messageId":"118","endLine":14,"endColumn":14},{"ruleId":"115","severity":1,"message":"129","line":11,"column":3,"nodeType":"117","messageId":"118","endLine":11,"endColumn":7},{"ruleId":"115","severity":1,"message":"130","line":12,"column":3,"nodeType":"117","messageId":"118","endLine":12,"endColumn":6},{"ruleId":"115","severity":1,"message":"131","line":13,"column":3,"nodeType":"117","messageId":"118","endLine":13,"endColumn":7},{"ruleId":"115","severity":1,"message":"132","line":15,"column":17,"nodeType":"117","messageId":"118","endLine":15,"endColumn":26},{"ruleId":"115","severity":1,"message":"133","line":15,"column":28,"nodeType":"117","messageId":"118","endLine":15,"endColumn":34},{"ruleId":"115","severity":1,"message":"116","line":9,"column":3,"nodeType":"117","messageId":"118","endLine":9,"endColumn":11},{"ruleId":"115","severity":1,"message":"119","line":11,"column":17,"nodeType":"117","messageId":"118","endLine":11,"endColumn":25},{"ruleId":"115","severity":1,"message":"134","line":14,"column":10,"nodeType":"117","messageId":"118","endLine":14,"endColumn":20},{"ruleId":"115","severity":1,"message":"135","line":14,"column":22,"nodeType":"117","messageId":"118","endLine":14,"endColumn":33},{"ruleId":"115","severity":1,"message":"132","line":12,"column":17,"nodeType":"117","messageId":"118","endLine":12,"endColumn":26},{"ruleId":"115","severity":1,"message":"133","line":12,"column":28,"nodeType":"117","messageId":"118","endLine":12,"endColumn":34},{"ruleId":"115","severity":1,"message":"136","line":1,"column":8,"nodeType":"117","messageId":"118","endLine":1,"endColumn":13},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'useToast' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Code' is defined but never used.","'Card' is defined but never used.","'Badge' is defined but never used.","'chakra' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'OrderedList' is defined but never used.","'Tag' is defined but never used.","'Link' is defined but never used.","'Text' is defined but never used.","'Box' is defined but never used.","'Flex' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'useHistory' is defined but never used.","'useLocation' is defined but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]